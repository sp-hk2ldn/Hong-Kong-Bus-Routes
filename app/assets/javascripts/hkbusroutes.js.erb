var App;

App = angular.module('hkBusRoutes', ['ngRoute', 'templates', 'ngAnimate', 'leaflet-directive', 'ngAria', 'ngMaterial']);

App.config([
  '$routeProvider', '$locationProvider', function($routeProvider, $locationProvider) {
    $routeProvider.when('/', {
      templateUrl: "index.html.erb"
    });
  return $locationProvider.html5Mode(true);
  }
]);

App.factory('route',  function($http, $q){
//    var route = this;
    var route = {};
    route.routeList = {};

    route.getAllRoutes = function(){
        var defer = $q.defer();

        $http.get('/routes')
                .success(function(response){
                    defer.resolve(response);
                })
                .error(function(error, status){
                    defer.reject(error);
                });

        return defer.promise;
    };
    route.singleRouteDetails = function(id){
        var defer = $q.defer();

        $http.get('/details/' + id + '/route_details/').success(function(response){
                    defer.resolve(response);
                })
                .error(function(error, status){
                    defer.reject(error);
                });
        return defer.promise;
    };

    return route;

});

App.controller("RoutesCtrl", function($scope, route, $timeout, $q, $log, $http, leafletData){

    angular.extend($scope, {
        center: {
            lat: 22.2783,
            lng: 114.1747,
            zoom: 18
        }
    });

    $scope.init = function() {
        $scope.getAll();
    };



    $scope.getAll = function(){
        route.getAllRoutes()
                .then(function(response){
                    //success
                    self.routes = response;
                }, function(error) {
                    //error
                });
    };

    $scope.getRouteDetails = function(id) {
        route.singleRouteDetails(id)
                .then(function(response){
                    self.routeDetails = response;
                    return route.routeDetails;
                }, function(error) {
                    //error
                });
    };

    var self = this;
    self.searchText = null;
    self.querySearch = querySearch;
    self.simulateQuery = false;
    self.isDisabled = false;
    self.selectedItemChange = selectedItemChange;
    self.searchTextChange = searchTextChange;
    self.selectedItem = null;


    function querySearch (q) {
        var results = q ? self.routes.filter(createFilterFor(q) ) : [],
                deferred;
        if (self.simulateQuery) {
            deferred = $q.defer();
            $timeout(function() { deferred.resolve( results ); }, Math.random() * 1000, false);
        return deferred.promise;
        } else {
            return results;
        }
    }


    function searchTextChange (text) {
        $log.info('Text changed to ' + text);
    }


    function createFilterFor(query) {
        var lowerCaseQuery = angular.lowercase(query);
        return function FilterFn(route) {
            return (route.route_from_to.toLowerCase().indexOf(lowerCaseQuery) === 0);
        };
    }


    function selectedItemChange (item) {
        if (item) {
            $log.info('Item changed to ' + item.route_from_to);
            $scope.getRouteDetails(item.id);
            if ($scope.currentRouteDetails.length < 1) {
                return
            } else {
                $scope.center.lat = parseFloat($scope.currentRouteDetails[0].latitude);
                $scope.center.lng = parseFloat($scope.currentRouteDetails[0].longitude);
            }
        }

    }
    $scope.init();
});