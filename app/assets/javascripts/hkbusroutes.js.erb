var App;

App = angular.module('hkBusRoutes', ['ngRoute', 'templates', 'ngAnimate', 'leaflet-directive', 'ngAria', 'ngMaterial']);

App.config([
  '$routeProvider', '$locationProvider', function($routeProvider, $locationProvider) {
    $routeProvider.when('/', {
      templateUrl: "index.html.erb"
    });
  return $locationProvider.html5Mode(true);
  }
]);

App.factory('route',  function($http, $q){
    var route = {};
    route.routeList = {};

    route.getAllRoutes = function(){
        var defer = $q.defer();

        $http.get('/routes')
                .success(function(response){
                    defer.resolve(response);
                })
                .error(function(error, status){
                    defer.reject(error);
                });

        return defer.promise;
    };


    return route;

});

App.factory('routeDetails', function($http){
    return function(id) {
        return $http.get('/details/' + id + '/route_details/').then(function (details) {
            return details.data;
        });
    };
});

App.controller("RoutesCtrl", function($scope, route, $timeout, $q, $log, $http, leafletData, routeDetails, leafletBoundsHelpers){



    if(navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function(position){
            $scope.$apply(function(){
                $scope.position = position;
                $scope.bounds = leafletBoundsHelpers.createBoundsFromArray([
                    [ position.coords.latitude, position.coords.longitude ],
                    [ position.coords.latitude, position.coords.longitude ]
                ]);
                $scope.markers.push({ lat: position.coords.latitude, lng: position.coords.longitude });
                console.log($scope.markers);
            })
        })
    }

    angular.extend($scope, {

        layers: {
            baselayers: {
                googleRoadmap: {
                    name: 'Google Streets',
                    layerType: 'ROADMAP',
                    type: 'google'
                }
            }
        },

        center: {
//            lat: 22.2783,
//            lng: 114.1747,
//            zoom: 16
        },

        bounds: $scope.bounds

//        myPosition: {
//            lat: 0,
//            lng: 0
//        },

//        markers: {
////            initialStopMarker: {
////                lat: null,
////                lng: null
////            },
////            lastStopMarker: {
////                lat:null,
////                lng:null
////            }
//        }
    });

    $scope.markers = new Array();



    $scope.init = function() {
        $scope.getAll();
    };


//get all routes
    $scope.getAll = function(){
        route.getAllRoutes()
                .then(function(response){
                    //success
                    self.routes = response;
                }, function(error) {
                    //error
                });
    };

//get route stops
    $scope.getRouteDetails = function(id) {
        routeDetails(id)
                .then(function(response){
                    debugger
                    self.routeDetails = response;
                    return route.routeDetails;
                }, function(error) {
                    //error
                });
    };



    var self = this;
    self.searchText = null;
    self.querySearch = querySearch;
    self.simulateQuery = false;
    self.isDisabled = false;
    self.selectedItemChange = selectedItemChange;
    self.searchTextChange = searchTextChange;
    self.selectedItem = null;


    function querySearch (q) {
        var results = q ? self.routes.filter(createFilterFor(q) ) : [],
                deferred;
        if (self.simulateQuery) {
            deferred = $q.defer();
            $timeout(function() { deferred.resolve( results ); }, Math.random() * 1000, false);
        return deferred.promise;
        } else {
            return results;
        }
    }


    function searchTextChange (text) {
        $log.info('Text changed to ' + text);
    }


    function createFilterFor(query) {
        var lowerCaseQuery = angular.lowercase(query);
        return function FilterFn(route) {
            return (route.route_from_to.toLowerCase().indexOf(lowerCaseQuery) === 0);
        };
    }


    function selectedItemChange (item) {
        if (item) {
            $log.info('Item changed to ' + item.route_from_to);
            routeDetails(item.id)
                    .then(function(data){
                        $scope.detailsArray = data;
                        if ($scope.detailsArray.length >= 1) {
        //                    $scope.center.lat = parseFloat($scope.detailsArray[0].latitude);
        //                    $scope.center.lng = parseFloat($scope.detailsArray[0].longitude);

                            $scope.markers.length = 0;
                            $scope.markers.push({lat: parseFloat($scope.detailsArray[0].latitude), lng: parseFloat($scope.detailsArray[0].longitude)})
                            $scope.markers.push({lat: parseFloat($scope.detailsArray[$scope.detailsArray.length - 1].latitude), lng: parseFloat($scope.detailsArray[$scope.detailsArray.length - 1].longitude)})

                            $scope.bounds.northEast.lat = parseFloat($scope.detailsArray[0].latitude);
                            $scope.bounds.northEast.lng = parseFloat($scope.detailsArray[0].longitude);
                            $scope.bounds.southWest.lng = parseFloat($scope.detailsArray[$scope.detailsArray.length - 1].longitude);
                            $scope.bounds.southWest.lat = parseFloat($scope.detailsArray[$scope.detailsArray.length - 1].latitude);
                        }
                    });
        }
        console.log($scope.bounds);
        leafletData.getMap().then(function(map){
            console.log(map.getBounds());
        });

    }
    $scope.init();
});